# template for the root nginx.conf
#pid		logs/nginx.pid;
user p3terx;
worker_rlimit_nofile 65535;
worker_processes 2;
events {
	worker_connections   102400; # ulimit -n 65535 to tunning in linux server
	multi_accept off;
	accept_mutex off;
}
http {
	include     inc/mime.types;
	default_type  text/plain;
	include inc/gzip.inc;
	include inc/http.inc;
	include	inc/lua.inc; # lua related settings
	lua_code_cache on;  #turn on in production
	lua_shared_dict cache 10m; #cache for all workers
	lua_shared_dict config 16m;
	lua_shared_dict lock 16k;
	resolver 8.8.8.8 ipv6=off;
	resolver_timeout 3s;
	error_log /data/logs/ngx.log warn; # Set to Crit on production
	lua_capture_error_log 200k;
	lua_package_path '/usr/local/openresty/nginx/lua/?.lua;/usr/local/openresty/nginx/lua/?/init.lua;/usr/local/openresty/nginx/lua/lib/?.lua;/usr/local/openresty/nginx/lua/?/init.lua;;;';
	lua_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
    lua_ssl_verify_depth 2;
	init_by_lua_block {
		require('init')
	}
	init_worker_by_lua_block {
		require('init_worker')
	}
	server {
		server_name _;
		listen 680;
		error_page 500 501 502 503 504 505 506 @5xx;
		location @5xx {
			internal;
			content_by_lua_block { ngx.print( ngx.status, ' Error: ', ngx.localtime(),' ', ngx.var.remote_addr ,'\n');ngx.say(ngx.req.raw_header());ngx.say(require("ngx.errlog").get_logs(200));}
		}
		include main80.conf;
	}
}
include stream.conf;